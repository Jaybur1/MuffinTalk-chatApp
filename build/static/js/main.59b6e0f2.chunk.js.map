{"version":3,"sources":["Events.js","Factories.js","components/LoginForm.js","components/sideBar/SideBarOption.js","components/sideBar/SideBar.js","components/chat/ChatHeading.js","components/Message/Messages.js","components/Message/MessageInput.js","components/chat/ChatContainer.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","NEW_CHAT_USER","uuidv4","require","createChatNameFromUsers","users","excludedUser","arguments","length","undefined","filter","u","join","getTime","date","concat","getHours","getMinutes","slice","createUser","_ref","_ref$name","name","_ref$socketId","socketId","id","createMessage","_ref2","_ref2$message","message","_ref2$sender","sender","time","Date","now","createChat","_ref3","_ref3$messages","messages","_ref3$users","_ref3$isGeneral","isGeneral","typingUsers","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setUser","user","isUser","console","log","setError","error","setState","state","nickname","handleSubmit","bind","assertThisInitialized","handleChange","event","preventDefault","socket","emit","target","value","_this2","_this$state","react_default","a","createElement","className","src","alt","onSubmit","htmlFor","ref","input","textInput","type","onChange","placeholder","Component","SideBarOption","_Component","apply","inherits","createClass","key","_this$props","lastMessage","active","onClick","toUpperCase","defaultProps","SideBar","search","onSendPrivateMessage","addChatForUser","username","activeSideBar","CHATS","setActiveSideBar","chats","activeChat","setActiveChat","logout","keyboard_arrow_down_default","list_ul_default","search_default","USERS","refs","map","chat","SideBarOption_SideBarOption","get","last","differenceBy","otherUser","title","power_settings_new_default","ChatHeading","numberOfUsers","video_camera_default","user_plus_default","keyboard_control_default","Messages","scrollDown","container","scrollTop","scrollHeight","MessageInput","handleKeyUp","keyCode","sendTyping","lastUpdateTime","isTyping","startCheckingTyping","typingInterval","setInterval","stopCheckingTyping","clearInterval","sendMessage","autoComplete","onKeyUp","disabled","ChatContainer","initSocket","resetChat","on","addChat","removedUsers","values","removeUserFromChat","addUserToChat","sendPrivateMessage","reciever","chatId","newUser","newChats","assign","toConsumableArray","newUsers","difference","objectSpread","reset","messageEvent","typingEvent","updateTypingInChat","addMessageToChat","push","includes","off","_this$props2","sideBar_SideBar","chat_ChatHeading","Message_Messages","Message_MessageInput","socketURL","Layout","io","reconnect","chat_ChatContainer","components_LoginForm","App","components_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59b6e0f2.chunk.js","sourcesContent":["module.exports = {\n    COMMUNITY_CHAT: \"COMMUNITY_CHAT\",\n    USER_CONNECTED: \"USER_CONNECTED\",\n    MESSAGE_RECIEVED: \"MESSAGE_RECIEVED\",\n    MESSAGE_SENT: \"MESSAGE_SENT\",\n    USER_DISCONNECTED: \"USER_DISCONNECTED\",\n    TYPING: \"TYPING\",\n    VERIFY_USER: \"VERIFY_USER\",\n    LOGOUT: \"LOGOUT\",\n    PRIVATE_MESSAGE: \"PRIVATE_MESSAGE\",\n    NEW_CHAT_USER: \"NEW_CHAT_USER\"\n}","const uuidv4 = require('uuid/v4')\n\n//create a new user\nconst createUser = ({\n    name = '',\n    socketId = null\n} = {}) => ({\n    id: uuidv4(),\n    name,\n    socketId\n})\n\n//create a message \n\nconst createMessage = ({\n    message = '',\n    sender = ''\n} = {}) => ({\n    id: uuidv4(),\n    time: getTime(new Date(Date.now())),\n    message,\n    sender\n})\n\n//create a chat \nconst createChat = ({\n    messages = [],\n    name = \"General\",\n    users = [],\n    isGeneral = false\n} = {}) => ({\n    id: uuidv4(),\n    name: isGeneral ? \"General\" : createChatNameFromUsers(users),\n    messages,\n    users,\n    typingUsers: [],\n    isGeneral\n})\n\nconst createChatNameFromUsers = (users, excludedUser = \"\") => {\n    return users.filter(u => u !== excludedUser).join(' & ') || \"Empty Users\"\n}\n\n\n\nconst getTime = (date) => {\n    return `${date.getHours()}:${(\"0\"+date.getMinutes()).slice(-2)}`\n}\n\nmodule.exports = {\n    createUser,\n    createMessage,\n    createChat,\n    createChatNameFromUsers\n}","import React, { Component } from 'react';\nimport { VERIFY_USER } from '../Events';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nickname: '',\n            error: ''\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    setUser = ({ user, isUser }) => {\n        console.log(user, isUser)\n        if (isUser) {\n            this.setError('User name taken')\n        } else {\n            this.setError('')\n            this.props.setUser(user)\n\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state.nickname);\n        const { socket } = this.props\n        const { nickname } = this.state\n        socket.emit(VERIFY_USER, nickname, this.setUser)\n        this.setState({ nickname: '' })\n    }\n\n    handleChange(event) {\n        this.setState({ nickname: event.target.value })\n    }\n\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    render() {\n        const { nickname, error } = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"login-form-logo\">\n                    <img src=\"https://vectr.com/jaybur/efqGEpvOy.png?width=640&height=640&select=efqGEpvOypage0\" alt=\"MuffinTalk-cat-logo\" />\n                </div>\n                <form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <label htmlFor=\"nickname\">\n                        <h2 id=\"login-label\">Got a nickname?</h2>\n                    </label>\n                    <input\n                        ref={(input) => { this.textInput = input }}\n                        type=\"text\"\n                        id=\"nickname\"\n                        value={nickname}\n                        onChange={this.handleChange}\n                        placeholder={'Type your cool name here'}\n                    />\n                    <div className=\"error\">{error ? error : null}</div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default LoginForm;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nexport class SideBarOption extends Component {\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n        lastMessage: PropTypes.string,\n        active: PropTypes.bool,\n        onClick: PropTypes.func\n    }\n    static defaultProps = {\n        lastMessage: '',\n        active: false,\n        onClick: () => { }\n    }\n    render() {\n        const { name, lastMessage, active, onClick } = this.props\n\n        return (\n            <div\n                className={`user ${active ? 'active' : ''}`}\n                onClick={onClick}\n            >\n                <div className=\"user-photo\">{name[0].toUpperCase()}</div>\n                <div className=\"user-info\">\n                    <div className=\"name\">{name}</div>\n                    {lastMessage && <div className=\"last-message\">{lastMessage}</div>}\n                </div>\n\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { SideBarOption } from './SideBarOption'\nimport { get, last, differenceBy } from 'lodash'\nimport { createChatNameFromUsers } from '../../Factories'\nimport FAChevronDown from 'react-icons/lib/md/keyboard-arrow-down'\nimport FAMenu from 'react-icons/lib/fa/list-ul'\nimport FASearch from 'react-icons/lib/fa/search'\nimport MdPowerSettingsNew from 'react-icons/lib/md/power-settings-new'\n\nclass SideBar extends Component {\n    static type = {\n        CHATS: \"chats\",\n        USERS: \"users\"\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: '',\n            activeSideBar: SideBar.type.CHATS\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ search: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const { search } = this.state\n        const { onSendPrivateMessage } = this.props\n        this.setState({ search: '' })\n        onSendPrivateMessage(search)\n    }\n\n    addChatForUser = (username) => {\n        this.setState({ activeSideBar: SideBar.type.CHATS })\n        this.props.onSendPrivateMessage(username)\n    }\n\n    setActiveSideBar = (activeSideBar) => {\n        this.setState({ activeSideBar })\n    }\n\n    render() {\n        const { chats, activeChat, user, setActiveChat, logout, users } = this.props\n        const { search, activeSideBar } = this.state\n        return (\n            <div id=\"side-bar\">\n                <div className=\"heading\">\n                    <div className=\"app-name\">MaffinTalk Chat<FAChevronDown /></div>\n                    <div className=\"menu\">\n                        <FAMenu />\n                    </div>\n                </div>\n                <form onSubmit={this.handleSubmit} className=\"search\">\n                    <i className=\"search-icon\"><FASearch /></i>\n                    <input\n                        onChange={this.handleChange}\n                        placeholder=\"Search user\"\n                        value={search}\n                        type=\"text\" />\n                    <div className=\"plus\"></div>\n                </form>\n                <div className=\"side-bar-select\">\n                    <div className={`side-bar-select__option ${activeSideBar === SideBar.type.CHATS ? 'active' : ''}`}\n                        onClick={() => { this.setActiveSideBar(SideBar.type.CHATS) }}\n                    >\n                        <span>Chats</span>\n                    </div>\n                    <div className={`side-bar-select__option ${activeSideBar === SideBar.type.USERS ? 'active' : ''}`}\n                        onClick={() => { this.setActiveSideBar(SideBar.type.USERS) }}\n                    >\n                        <span>Users</span>\n                    </div>\n                </div>\n                <div\n                    className=\"users\"\n                    ref='users'\n                    onClick={(event) => { (event.target === this.refs.user) && setActiveChat(null) }}>\n                    {\n                        activeSideBar === SideBar.type.CHATS ?\n                            chats.map((chat) => {\n                                if (chat.name) {\n                                    return (\n                                        <SideBarOption\n                                            key={chat.id}\n                                            name={chat.isGeneral ? chat.name : createChatNameFromUsers(chat.users, user.name)}\n                                            lastMessage={get(last(chat.messages), 'message', '')}\n                                            active={activeChat.id === chat.id}\n                                            onClick={() => { this.props.setActiveChat(chat) }}\n                                        />\n                                    )\n                                }\n\n                                return null\n                            })\n                            :\n                            differenceBy(users, [user], 'name').map((otherUser) => {\n                                return (\n                                    <SideBarOption\n                                        key={otherUser.id}\n                                        name={otherUser.name}\n                                        onClick={() => {\n                                            this.addChatForUser(otherUser.name)\n                                        }}\n                                    />\n                                )\n                            })\n                    }\n\n                </div>\n                <div className=\"current-user\">\n                    <span>{user.name}</span>\n                    <div onClick={() => { logout() }} title=\"Logout\" className=\"logout\">\n                        <MdPowerSettingsNew />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SideBar;\n\n/*  <div\n                                        key={chat.id}\n                                        className={`user ${classNames}`}\n                                        onClick={() => { setActiveChat(chat) }}\n                                    >\n                                        <div className=\"user-photo\">{chatSideName[0].toUpperCase()}</div>\n                                        <div className=\"user-info\">\n                                            <div className=\"name\">{chatSideName}</div>\n                                            {lastMessage && <div className=\"last-message\">{lastMessage.message}</div>}\n                                        </div>\n\n                                    </div>*/","import React from 'react';\nimport FAVideo from 'react-icons/lib/fa/video-camera';\nimport FAUserPlus from 'react-icons/lib/fa/user-plus';\nimport MdEllipsisMenu from 'react-icons/lib/md/keyboard-control';\n\nfunction ChatHeading({ name, numberOfUsers }) {\n\n    return (\n        <div className=\"chat-header\">\n            <div className=\"user-info\">\n                <div className=\"user-name\">{name}</div>\n                <div className=\"status\">\n                    <div className=\"indicator\"></div>\n                    <span>{numberOfUsers ? numberOfUsers : null}</span>\n                </div>\n            </div>\n            <div className=\"options\">\n                <FAVideo />\n                <FAUserPlus />\n                <MdEllipsisMenu />\n            </div>\n        </div>\n\n    );\n\n}\n\nexport default ChatHeading;","import React, { Component } from 'react';\n\nclass Messages extends Component {\n    constructor(props) {\n        super(props);\n        this.scrollDown = this.scrollDown.bind(this)\n    }\n\n    scrollDown() {\n        const { container } = this.refs\n        container.scrollTop = container.scrollHeight\n    }\n\n    componentDidMount() {\n        this.scrollDown()\n    }\n\n    componentDidUpdate() {\n        this.scrollDown()\n    }\n\n    render() {\n        const { messages, user, typingUsers } = this.props\n        return (\n            <div ref='container'\n                className=\"thread-container\"\n            >\n                <div className=\"thread\">\n                    {\n                        messages.map((message) => {\n                            return (\n                                <div\n                                    key={message.id}\n                                    className={`message-container ${message.sender === user.name && 'right'}`}\n                                >\n                                    <div className=\"time\">{message.time}</div>\n                                    <div className=\"data\">\n                                        <div className=\"message\">{message.message}</div>\n                                        <div className=\"name\">{message.sender}</div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                    {\n                        typingUsers.map((name) => {\n                            return (\n                                <div\n                                    key={name}\n                                    className=\"typing-user\"\n                                >\n                                    {\n                                        `${name} is typing . . .`\n                                    }\n                                </div>\n                            )\n                        })\n                    }\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\n\nclass MessageInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            isTyping: false\n        }\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n    }\n\n    componentWillUnmount() {\n        this.stopCheckingTyping()\n    }\n\n    handleKeyUp = (event) => {\n        event.keyCode !== 13 && this.sendTyping()\n    }\n\n    sendTyping = () => {\n        this.lastUpdateTime = Date.now()\n        if (!this.state.isTyping) {\n            this.setState({ isTyping: true })\n            this.props.sendTyping(true)\n            this.startCheckingTyping()\n        }\n    }\n\n    startCheckingTyping = () => {\n        console.log('Typing')\n        this.typingInterval = setInterval(() => {\n            if ((Date.now() - this.lastUpdateTime) > 300) {\n                this.setState({ isTyping: false })\n                this.stopCheckingTyping()\n            }\n        }, 300)\n    }\n\n    stopCheckingTyping = () => {\n        console.log('not typing')\n        if (this.typingInterval) {\n            clearInterval(this.typingInterval)\n            this.props.sendTyping(false)\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            message: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.sendMessage()\n        this.setState({ message: '' })\n    }\n\n    sendMessage = () => {\n        this.props.sendMessage(this.state.message)\n    }\n\n    render() {\n        const { message } = this.state\n        return (\n            <div className=\"message-input\">\n                <form\n                    onSubmit={this.handleSubmit}\n                    className=\"message-form\"\n                >\n                    <input\n                        id=\"message\"\n                        ref={\"messageinput\"}\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={message}\n                        autoComplete={'off'}\n                        placeholder=\"type your message here\"\n                        onKeyUp={this.handleKeyUp}\n                        onChange={this.handleChange}\n\n                    />\n                    <button\n                        disabled={message.length < 1}\n                        type=\"submit\"\n                        className=\"send\"\n                    >\n                        Send\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default MessageInput;","import React, { Component } from 'react';\nimport SideBar from '../sideBar/SideBar';\nimport { COMMUNITY_CHAT, MESSAGE_RECIEVED, TYPING, MESSAGE_SENT, PRIVATE_MESSAGE, USER_CONNECTED, USER_DISCONNECTED, NEW_CHAT_USER } from '../../Events'\nimport ChatHeading from './ChatHeading'\nimport Messages from '../Message/Messages'\nimport MessageInput from '../Message/MessageInput'\nimport { values, difference, differenceBy } from 'lodash'\n\nclass ChatContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chats: [],\n            activeChat: null,\n            users: []\n        }\n    }\n\n    componentDidMount() {\n        const { socket } = this.props\n        this.initSocket(socket)\n    }\n\n    componentWillUnmount() {\n        const { socket } = this.props\n        socket.off(PRIVATE_MESSAGE)\n        socket.off(USER_CONNECTED)\n        socket.off(USER_DISCONNECTED)\n        socket.off(NEW_CHAT_USER)\n    }\n\n    initSocket = (socket) => {\n        socket.emit(COMMUNITY_CHAT, this.resetChat)\n        socket.on(PRIVATE_MESSAGE, this.addChat)\n        socket.on('connect', () => {\n            socket.emit(COMMUNITY_CHAT, this.resetChat)\n        })\n        socket.on(USER_DISCONNECTED, (users) => {\n            const removedUsers = differenceBy(this.state.users, values(users), 'id')\n            this.removeUserFromChat(removedUsers)\n            this.setState({ users: values(users) })\n        })\n        socket.on(USER_CONNECTED, (users) => {\n            this.setState({ users: values(users) })\n        })\n        socket.on(NEW_CHAT_USER, this.addUserToChat)\n    }\n\n    sendPrivateMessage = (reciever) => {\n        const { socket, user } = this.props\n        const { activeChat } = this.state\n        socket.emit(PRIVATE_MESSAGE, { reciever, sender: user.name, activeChat })\n    }\n\n    addUserToChat = ({ chatId, newUser }) => {\n        const { chats } = this.state\n        const newChats = chats.map(chat => {\n            if (chat.id === chatId) {\n                return Object.assign({}, chat, { user: [...chat.users, newUser] })\n            }\n            return chat\n        })\n        this.setState({ chats: newChats })\n    }\n\n    removeUserFromChat = removedUsers => {\n        const { chats } = this.state\n        const newChats = chats.map(chat => {\n            let newUsers = difference(chat.users, removedUsers.map(u => u.name))\n            return {\n                ...chat,\n                users: newUsers\n            }\n        })\n        this.setState({ chats: newChats })\n    }\n\n    //Reset the chat back to only the chat passed in\n    resetChat = (chat) => {\n        return this.addChat(chat, true)\n    }\n    //Adds a new chat to the chat container, if reset is true ,than it removes\n    //all chats and sets the chat to be the main chat .\n    addChat = (chat, reset = false) => {\n\n        const { socket } = this.props\n        const { chats } = this.state\n\n        const newChats = reset ? [chat] : [...chats, chat]\n        this.setState({ chats: newChats, activeChat: reset ? chat : this.state.activeChat })\n\n        const messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`\n        const typingEvent = `${TYPING}-${chat.id}`\n\n        socket.on(typingEvent, this.updateTypingInChat(chat.id))\n        socket.on(messageEvent, this.addMessageToChat(chat.id))\n    }\n\n    //returns a function that will add message to chat with\n    //the chatId passed in\n    addMessageToChat = (chatId) => {\n        return message => {\n            const { chats } = this.state\n            let newChats = chats.map((chat) => {\n                if (chat.id === chatId)\n                    chat.messages.push(message)\n                return chat\n\n            })\n            this.setState({ chats: newChats })\n        }\n    }\n    //updates the typing of chat with id passed in \n    updateTypingInChat = (chatId) => {\n        return ({ isTyping, user }) => {\n            if (user !== this.props.user.name) {\n                const { chats } = this.state\n                let newChats = chats.map((chat) => {\n                    if (chat.id === chatId) {\n                        if (isTyping && !chat.typingUsers.includes(user)) {\n                            chat.typingUsers.push(user)\n                        } else if (!isTyping && chat.typingUsers.includes(user)) {\n                            chat.typingUsers = chat.typingUsers.filter(u => u !== user)\n                        }\n                    }\n                    return chat\n                })\n                this.setState({ chats: newChats })\n            }\n        }\n    }\n\n    //Adds a message to the specified chat\n    sendMessage = (chatId, message) => {\n        const { socket } = this.props\n        socket.emit(MESSAGE_SENT, { chatId, message })\n    }\n    //Sends typing status to the server\n    sendTyping = (chatId, isTyping) => {\n        const { socket } = this.props\n        socket.emit(TYPING, { chatId, isTyping })\n    }\n    setActiveChat = (activeChat) => {\n        this.setState({ activeChat })\n    }\n\n    render() {\n        const { user, logout } = this.props\n        const { chats, activeChat, users } = this.state\n        return (\n            <div className=\"container\">\n                <SideBar\n                    users={users}\n                    logout={logout}\n                    chats={chats}\n                    user={user}\n                    activeChat={activeChat}\n                    setActiveChat={this.setActiveChat}\n                    onSendPrivateMessage={this.sendPrivateMessage}\n                />\n                <div className=\"chat-room-container\">\n                    {\n                        activeChat !== null ? (\n                            <div className=\"chat-room\">\n                                <ChatHeading name={activeChat.name} />\n                                <Messages\n                                    messages={activeChat.messages}\n                                    user={user}\n                                    typingUsers={activeChat.typingUsers}\n                                />\n                                <MessageInput\n                                    sendMessage={\n                                        (message) => {\n                                            this.sendMessage(activeChat.id, message)\n                                        }\n                                    }\n                                    sendTyping={\n                                        (isTyping) => {\n                                            console.log(activeChat.id)\n                                            this.sendTyping(activeChat.id, isTyping)\n                                        }\n                                    }\n                                />\n                            </div>\n                        ) :\n                            (\n                                <div className=\"chat-room choose\">\n                                    <h3>Choose a Chat</h3>\n                                </div>\n                            )\n                    }\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default ChatContainer;","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport LoginForm from './LoginForm';\nimport ChatContainer from './chat/ChatContainer'\n\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from '../Events';\n\nconst socketURL = \"/\"\n\nclass Layout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            socket: null,\n            user: null,\n        }\n    }\n\n    componentWillMount() {\n        this.initSocket()\n    }\n    //Connect to & initialize the socket\n    initSocket = () => {\n        const socket = io(socketURL)\n        socket.on('connect', () => {\n            if (this.state.user) {\n                this.reconnect(socket)\n            } else {\n                console.log('Connected');\n            }\n        })\n        this.setState({ socket })\n    }\n\n    reconnect = (socket) => {\n        socket.emit(VERIFY_USER, this.state.user.name, ({ isUser, user }) => {\n            if (isUser) {\n                this.state({ user: null })\n            } else {\n                this.setUser(user)\n            }\n        })\n    }\n\n    //Sets the user porperty in the state.\n    setUser = (user) => {\n        const { socket } = this.state\n        socket.emit(USER_CONNECTED, user);\n        this.setState({ user })\n    }\n    //Sets the user property in the state back to null.\n    logout = () => {\n        const { socket } = this.state\n        socket.emit(LOGOUT);\n        this.setState({ user: null })\n    }\n\n    render() {\n        const { socket, user } = this.state;\n        return (\n            <div className=\"container\">\n                {\n                    !user ?\n                        <LoginForm socket={socket} setUser={this.setUser} />\n                        :\n                        <ChatContainer socket={socket} user={user} logout={this.logout} />\n                }\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport Layout from './components/Layout';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'MuffinTalk'\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Layout title={this.state.title} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}